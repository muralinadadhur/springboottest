# Docker Compose is great to Orchestrate your services!. More info on how to twick this file and use it for your service is available [https://confluence.cheggnet.com/display/BOOTS/Docker+Compose+Integration]
version: '3'
services:
  postgres:
    image: postgres:10
    restart: always
    ports:
      - "${PGPORT}:5432"
    volumes:
      - ./src/main/resources/db/init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: <DB_NAME>
      POSTGRES_USER: <DB_USER_NAME>
      POSTGRES_PASSWORD: <DB_PASSWORD>
    command: -d 2
  flyway:
    image: boxfuse/flyway
    volumes:
      - ./src/main/resources/db/migration:/flyway/sql
    depends_on:
      - postgres
    command: -url=jdbc:postgresql://postgres:5432/<DB_NAME> -schemas=public,core -user=<DB_USER_NAME> -password=<DB_PASSWORD> -connectRetries=60 migrate
  <SERVICE_NAME>: #This needs to be changed to the service name. Example : deck-service
    build:
      context: .
    ports:
      - "${APPPORT}:8080"
    depends_on:
      - flyway
    environment:
      CHEGG_ENV: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/<DB_NAME> #Example: Data Source URL is for postgres DB. You need to change based on the DB used by the application
      SPRING_DATASOURCE_USERNAME: <DB_USER_NAME>
      SPRING_DATASOURCE_PASSWORD: <DB_PASSWORD>
